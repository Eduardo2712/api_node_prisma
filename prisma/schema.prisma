generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model anuncios {
  id              Int           @id @default(autoincrement())
  id_usuario      Int
  id_tipo_anuncio Int
  titulo          String        @db.VarChar(255)
  descricao       String        @db.Text
  valor           Int
  data_criado     DateTime?     @default(now()) @db.DateTime(0)
  data_atualizado DateTime?     @default(now()) @db.DateTime(0)
  ativo           Int           @db.TinyInt
  patrocinado     Int           @db.TinyInt
  cep             String?       @db.VarChar(255)
  rua             String        @db.VarChar(255)
  cidade          String        @db.VarChar(255)
  numero          String        @db.VarChar(255)
  complemento     String?       @db.VarChar(255)
  bairro          String        @db.VarChar(255)
  estado          String        @db.VarChar(255)
  tipo_anuncios   tipo_anuncios @relation(fields: [id_tipo_anuncio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "anuncios_ibfk_2")
  usuarios        usuarios      @relation(fields: [id_usuario], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "anuncios_ibfk_1")
  imagens         imagens[]
  valores         valores[]

  @@index([id_tipo_anuncio], map: "id_tipo_anuncio")
  @@index([id_usuario], map: "id_usuario")
}

model imagens {
  id              Int       @id @default(autoincrement())
  nome            String    @db.VarChar(255)
  caminho         String    @db.VarChar(255)
  id_anuncio      Int
  principal       Boolean
  data_criado     DateTime? @default(now()) @db.DateTime(0)
  data_atualizado DateTime? @default(now()) @db.DateTime(0)
  anuncios        anuncios  @relation(fields: [id_anuncio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "imagens_ibfk_1")

  @@index([id_anuncio], map: "id_anuncio")
}

model tipo_anuncios {
  id              Int        @id @default(autoincrement())
  nome            String     @db.VarChar(255)
  data_criado     DateTime?  @default(now()) @db.DateTime(0)
  data_atualizado DateTime?  @default(now()) @db.DateTime(0)
  anuncios        anuncios[]
}

model usuarios {
  id              Int        @id @default(autoincrement())
  nome            String     @db.VarChar(255)
  ativo           Int        @default(1)
  id_senha        Int
  email           String     @unique @db.VarChar(255)
  telefone        String     @db.VarChar(255)
  data_nasc       DateTime   @db.Date
  cpf             String     @db.VarChar(255)
  login           String     @db.VarChar(255)
  senha           String     @db.VarChar(255)
  data_criado     DateTime?  @default(now()) @db.DateTime(0)
  data_atualizado DateTime?  @default(now()) @db.DateTime(0)
  bairro          String     @db.VarChar(255)
  cep             String?    @db.VarChar(255)
  cidade          String     @db.VarChar(255)
  complemento     String?    @db.VarChar(255)
  estado          String     @db.VarChar(255)
  numero          String     @db.VarChar(255)
  rua             String     @db.VarChar(255)
  anuncios        anuncios[]
}

model valores {
  id              Int       @id @default(autoincrement())
  valor           Int
  ativo           Int       @default(1)
  id_anuncio      Int
  data_criado     DateTime? @default(now()) @db.DateTime(0)
  data_atualizado DateTime? @default(now()) @db.DateTime(0)
  anuncios        anuncios  @relation(fields: [id_anuncio], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "valores_ibfk_1")

  @@index([id_anuncio], map: "id_anuncio")
}

model estados {
  id      Int       @id @default(autoincrement())
  nome    String    @db.VarChar(100)
  uf      String    @db.VarChar(100)
  cidades cidades[]
}

model cidades {
  id        Int     @id @default(autoincrement())
  nome      String  @db.VarChar(100)
  id_estado Int
  estados   estados @relation(fields: [id_estado], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cidades_ibfk_1")
}
